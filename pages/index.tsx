import type { NextPage } from "next";
import { GetServerSideProps } from "next";
import Head from "next/head";

//auth stuff
import { getProviders, getSession, useSession } from "next-auth/react";

import Sidebar from "../components/Sidebar";
import Feed from "../components/Feed";
import Login from "../components/Login";
import Modal from "../components/Modal";
import { useRecoilState } from "recoil";
import { modalState } from "../atoms/modalAtom";
import Widgets from "../components/Widgets";

interface Props {
  trendingResults: Trending[];
  followResults: Follow[];
  providers?: any;
}

const Home: NextPage<Props> = ({
  trendingResults,
  followResults,
  providers,
}) => {
  const { data: session, status } = useSession();
  const [isOpen, setIsOpen] = useRecoilState<boolean>(modalState);

  if (!session) return <Login providers={providers} />;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-black min-h-screen flex max-w-[1500px] mx-auto">
        <Sidebar />
        <Feed />

        <Widgets
          trendingResults={trendingResults}
          followResults={followResults}
        />

        {isOpen && <Modal />}
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const trendingResults = await fetch("https://jsonkeeper.com/b/NKEV").then(
    (res) => res.json()
  );
  const followResults = await fetch("https://jsonkeeper.com/b/WWMJ").then(
    (res) => res.json()
  );

  const providers = await getProviders();
  const session = await getSession(context);

  return {
    props: {
      trendingResults,
      followResults,
      providers,
      session,
    },
  };
};

interface Trending {
  heading: string;
  description: string;
  img: URL;
  tags: string[];
}

interface Follow {
  userImg: URL;
  username: string;
  tag: string;
}

export default Home;
